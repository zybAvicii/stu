package com.jt.service;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import com.alibaba.dubbo.config.annotation.Service;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.jt.mapper.OrderItemMapper;
import com.jt.mapper.OrderMapper;
import com.jt.mapper.OrderShippingMapper;
import com.jt.pojo.Order;
import com.jt.pojo.OrderItem;
import com.jt.pojo.OrderShipping;



@Service(timeout = 3000)
public class OrderServiceImpl implements OrderService{
	
	@Autowired
	private OrderItemMapper orderItemMapper;
	@Autowired
	private OrderMapper orderMapper;
	@Autowired
	private OrderShippingMapper orderShippingMapper;
	
	@Transactional
	@Override
	public String saveOrder(Order order) {
		String orderId=""+order.getUserId()+System.currentTimeMillis();
		Date date = new Date();
		//2.实现订单入库
		order.setStatus(1)
			 .setOrderId(orderId)
			 .setUpdated(date);
		orderMapper.insert(order);
		System.out.println("订单入库成功");
		//3.入库订单物流
		OrderShipping orderShipping = order.getOrderShipping();
		orderShipping.setOrderId(orderId)
					 .setCreated(date)
					 .setUpdated(date);
		orderShippingMapper.insert(orderShipping);
		
		List<OrderItem> orderItems = order.getOrderItems();
		for (OrderItem orderItem : orderItems) {
			orderItem.setOrderId(orderId)
					 .setCreated(date)
					 .setUpdated(date);
			orderItemMapper.insert(orderItem);
			//insert into user values(1,"张三",18,"男"),(1,"张四",19,"男")...
		}
		System.out.println("订单入库商品成功!!!!!");
			 
		return orderId;
	}

	@Override
	public Order findOrderById(String id) {
		Order order = orderMapper.selectById(id);
		OrderShipping orderShipping = orderShippingMapper.selectById(id);
		QueryWrapper<OrderItem> queryWrapper=new QueryWrapper<>();
		queryWrapper.eq("order_id",id);
		List<OrderItem> list = orderItemMapper.selectList(queryWrapper);
		order.setOrderShipping(orderShipping)
		.setOrderItems(list);
		
		return null;
	}
	/*
	 * Order order = orderMapper.selectById(id); 
	 * OrderShipping shipping = orderShippingMapper.selectById(id); 
	 * QueryWrapper<OrderItem> queryWrapper =new QueryWrapper<>(); 
	 * queryWrapper.eq("order_id", id);
	 *  List<OrderItem> list =orderItemMapper.selectList(queryWrapper); 
	 *  order.setOrderShipping(shipping).setOrderItems(list);
	 */
	
	
}





