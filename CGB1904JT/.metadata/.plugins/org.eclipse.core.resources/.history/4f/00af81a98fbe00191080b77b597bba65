package com.jt.controller;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.alibaba.druid.util.StringUtils;
import com.fasterxml.jackson.databind.util.JSONPObject;
import com.jt.service.UserService;
import com.jt.vo.SysResult;
import redis.clients.jedis.JedisCluster;
@RequestMapping("/user")
@RestController
public class UserController {
	
	@Autowired
	private UserService userService;
	@Autowired
	private JedisCluster jedisCluster;
	
	
	/**
	 * 实现用户信息校验
	 * */
	@RequestMapping("/check/{param}/{type}")
	public JSONPObject checkUser(
							   @PathVariable String param,
							   @PathVariable Integer type,
							   String callback) {
					JSONPObject jsonpObject;
					try {
						boolean flag = 
								userService.findCheckUser(param,type);//用户名校验	
						jsonpObject = new JSONPObject(callback,SysResult.success(flag));
					
					} catch (Exception e) {
						e.printStackTrace();
						jsonpObject=new JSONPObject(callback,SysResult.success());
					}
			
					return jsonpObject;						
	}
	
	
	@RequestMapping("/query/{ticket}")
	public JSONPObject findUserByTicket(@PathVariable String ticket,String callback) {
		
		String userJSON = jedisCluster.get(ticket);
		JSONPObject jsonpObject = null;
		if(StringUtils.isEmpty(userJSON)) {
			jsonpObject = new JSONPObject(callback,SysResult.fail());
		}else {
			jsonpObject = new JSONPObject(callback,SysResult.success(userJSON));
		}
		return jsonpObject;
	}
	
	@RequestMapping("/logout")
	public String logout(HttpServletRequest request,HttpServletResponse response) {
	

		//1.获取cookie数据
		Cookie[] cookies = request.getCookies();
		//2.判断cookie是否有值
		String ticket = null;
		if(cookies.length>0) {
			for (Cookie cookie : cookies) {	
				if("JT_TICKET".equals(cookie.getName())) {
					ticket = cookie.getValue();
					break;
				}
			}
		}
		//3.删除redis
		if(!StringUtils.isEmpty(ticket)) {
			jedisCluster.del(ticket);
		}
		
		/**
		 * 4.删除cookie
		 * setMaxAge
		 * 		>0  表示设定超时时间
		 * 		=0  表示立即删除cookie
		 * 		-1 当会话关闭后,删除cookie
		 */
		Cookie cookie = new Cookie("JT_TICKET","");
		cookie.setMaxAge(0); //删除cookie
		cookie.setPath("/");
		cookie.setDomain("jt.com");
		response.addCookie(cookie);
		//重定向到系统首页
		return "redirect:/";
	}
	
	
	
	
	
	
	
	

}











